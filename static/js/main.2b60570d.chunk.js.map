{"version":3,"sources":["logo.svg","App.js","serviceWorker.js","index.js"],"names":["module","exports","App","className","href","target","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"yJAAAA,EAAOC,QAAU,IAA0B,kC,0GCkG5BC,MA9Ff,WACE,OACE,yBAAKC,UAAU,OACb,gCACE,yBAAKA,UAAU,gBACb,wBAAIA,UAAU,iBAAd,6BACA,wBAAIA,UAAU,cAAd,uBAGJ,8BACE,yBAAKA,UAAU,wBACb,6BAASA,UAAU,cACjB,6BAASA,UAAU,8BACjB,wBAAIA,UAAU,kBAAd,kCACA,uBAAGA,UAAU,kBAAkBC,KAAK,oDAAoDC,OAAO,UAA/F,qCACA,uBAAGF,UAAU,cAAb,qWAGF,6BAASA,UAAU,sBACjB,yBAAKA,UAAU,2BACb,wBAAIA,UAAU,oBAAd,mEACA,uBAAGA,UAAU,uBAAb,OAAuC,6BAAvC,SAAkD,6BAAlD,cAAkE,6BAAlE,YAAgF,6BAAhF,gCAAkH,6BAAlH,+BAAmJ,6BAAnJ,kBAAuK,6BAAvK,mBAA4L,6BAA5L,eAA6M,6BAA7M,0BAAyO,6BAAzO,0BAAqQ,6BAArQ,uBAA8R,6BAA9R,oBAAoT,6BAApT,aAAmU,6BAAnU,sBACA,yBAAKA,UAAU,+BAEjB,yBAAKA,UAAU,2BACb,wBAAIA,UAAU,gBAAd,kBAA4C,0BAAMA,UAAU,kBAAhB,oBAC5C,yBAAKA,UAAU,cACb,uBAAGA,UAAU,qBAAb,OACA,uBAAGA,UAAU,6BAAb,uCAEF,yBAAKA,UAAU,+BAEjB,yBAAKA,UAAU,2BACb,wBAAIA,UAAU,gBAAd,kBAA4C,0BAAMA,UAAU,kBAAhB,mBAC5C,yBAAKA,UAAU,cACb,uBAAGA,UAAU,qBAAb,OACA,uBAAGA,UAAU,6BAAb,sDAEF,yBAAKA,UAAU,+BAEjB,yBAAKA,UAAU,2BACb,wBAAIA,UAAU,gBAAd,kBAA4C,0BAAMA,UAAU,kBAAhB,4BAC5C,yBAAKA,UAAU,cACb,uBAAGA,UAAU,qBAAb,OACA,uBAAGA,UAAU,6BAAb,+CAEF,yBAAKA,UAAU,+BAEjB,yBAAKA,UAAU,2BACb,wBAAIA,UAAU,gBAAd,kBAA4C,0BAAMA,UAAU,kBAAhB,wCAC5C,yBAAKA,UAAU,cACb,uBAAGA,UAAU,qBAAb,OACA,uBAAGA,UAAU,6BAAb,8EAEF,yBAAKA,UAAU,+BAEjB,yBAAKA,UAAU,2BACb,wBAAIA,UAAU,gBAAd,kBAA4C,0BAAMA,UAAU,kBAAhB,sCAC5C,yBAAKA,UAAU,cACb,uBAAGA,UAAU,qBAAb,OACA,uBAAGA,UAAU,6BAAb,4GAEF,yBAAKA,UAAU,+BAEjB,yBAAKA,UAAU,2BACb,wBAAIA,UAAU,gBAAd,kBAA4C,0BAAMA,UAAU,kBAAhB,oBAC5C,yBAAKA,UAAU,cACb,uBAAGA,UAAU,qBAAb,QACA,uBAAGA,UAAU,6BAAb,6CAEF,yBAAKA,UAAU,+BAEjB,yBAAKA,UAAU,2BACb,wBAAIA,UAAU,gBAAd,kBAA4C,0BAAMA,UAAU,kBAAhB,4BAC5C,yBAAKA,UAAU,cACb,uBAAGA,UAAU,qBAAb,QACA,uBAAGA,UAAU,6BAAb,2DAEF,yBAAKA,UAAU,+BAEjB,yBAAKA,UAAU,2BACb,wBAAIA,UAAU,gBAAd,kBAA4C,0BAAMA,UAAU,kBAAhB,gCAC5C,yBAAKA,UAAU,cACb,uBAAGA,UAAU,qBAAb,UACA,uBAAGA,UAAU,6BAAb,iCC5EEG,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.2b60570d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.25bf045c.svg\";","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header>\n        <div className=\"title-holder\">\n          <h1 className=\"title__header\">California Whale Watchers</h1>\n          <h3 className=\"by__header\">By Matthew Malone</h3>\n        </div>\n      </header>\n      <main>\n        <div className=\"main-top-color__div\"></div>\n          <section className=\"data__body\">\n            <section className=\"main-beach-whale-data__div\">\n              <h2 className=\"data-title__h2\">Beach and Whale Sightings Data</h2>\n              <a className=\"link-to-repo__a\" href=\"https://github.com/matthewdshepherd/whalewatchers\" target=\"_blank\">Get Further API Documentaion Here</a>\n              <p className=\"data-about\">This API provides data on 98 public beaches spanning all California counties. Each location includes information about the beach, including location, type of access and parking. Each beach has the 100 most whale sightings within 10 miles of the beach as of  November 2019. 14 whale and marine animal species are included in the sightings of\n  each beach.</p>\n            </section>\n            <section className=\"api-block__section\">\n              <div className=\"api-block__section__div\">\n                <h4 className=\"whale-species_h2\">Sighting Available For Following Whale & Marine Animal Species:</h4>\n                <p className=\"whales-available__p\">orca<br/> minke<br/> gray whale<br/> humpback<br/> atlantic white-sided dolphin<br/> pacific white-sided dolphin<br/> dalls porpoise<br/> harbor porpoise<br/> harbor seal<br/> northern elephant seal<br/> southern elephant seal<br/> california sea Lion<br/> steller sea lion<br/> sea otter<br/> other and unknown</p>\n                <div className=\"api-bottom-seperator__div\"></div>\n              </div>\n              <div className=\"api-block__section__div\">\n                <h4 className=\"api-link__h4\">www.heroku.com <span className=\"api-link__span\">/api/v1/beaches</span></h4>\n                <div className=\"fetch__div\">\n                  <p className=\"fetch--request__p\">GET</p>\n                  <p className=\"fetch--request--return__p\">Returns all beaches in JSON format</p>\n                </div>\n                <div className=\"api-bottom-seperator__div\"></div>\n              </div>\n              <div className=\"api-block__section__div\">\n                <h4 className=\"api-link__h4\">www.heroku.com <span className=\"api-link__span\">v1/beaches/:id</span></h4>\n                <div className=\"fetch__div\">\n                  <p className=\"fetch--request__p\">GET</p>\n                  <p className=\"fetch--request--return__p\">Returns a specific beach sightings in JSON format</p>\n                </div>\n                <div className=\"api-bottom-seperator__div\"></div>\n              </div>\n              <div className=\"api-block__section__div\">\n                <h4 className=\"api-link__h4\">www.heroku.com <span className=\"api-link__span\">/api/v1/whale_sightings</span></h4>\n                <div className=\"fetch__div\">\n                  <p className=\"fetch--request__p\">GET</p>\n                  <p className=\"fetch--request--return__p\">Returns all whale sightings in JSON format</p>\n                </div>\n                <div className=\"api-bottom-seperator__div\"></div>\n              </div>\n              <div className=\"api-block__section__div\">\n                <h4 className=\"api-link__h4\">www.heroku.com <span className=\"api-link__span\">/api/v1/beaches/:id/whale_sightings</span></h4>\n                <div className=\"fetch__div\">\n                  <p className=\"fetch--request__p\">GET</p>\n                  <p className=\"fetch--request--return__p\">Returns 100 most recent whale sightings for specific beach in JSON format</p>\n                </div>\n                <div className=\"api-bottom-seperator__div\"></div>\n              </div>\n              <div className=\"api-block__section__div\">\n                <h4 className=\"api-link__h4\">www.heroku.com <span className=\"api-link__span\">/api/v1/beaches/sighting_type/:id</span></h4>\n                <div className=\"fetch__div\">\n                  <p className=\"fetch--request__p\">GET</p>\n                  <p className=\"fetch--request--return__p\">Returns all beaches where there was a whale/marine animal sighting of the requested type in JSON format</p>\n                </div>\n                <div className=\"api-bottom-seperator__div\"></div>\n              </div>\n              <div className=\"api-block__section__div\">\n                <h4 className=\"api-link__h4\">www.heroku.com <span className=\"api-link__span\">/api/v1/beaches</span></h4>\n                <div className=\"fetch__div\">\n                  <p className=\"fetch--request__p\">POST</p>\n                  <p className=\"fetch--request--return__p\">Creates a new beach, must in JSON format</p>\n                </div>\n                <div className=\"api-bottom-seperator__div\"></div>\n              </div>\n              <div className=\"api-block__section__div\">\n                <h4 className=\"api-link__h4\">www.heroku.com <span className=\"api-link__span\">/api/v1/whale_sightings</span></h4>\n                <div className=\"fetch__div\">\n                  <p className=\"fetch--request__p\">POST</p>\n                  <p className=\"fetch--request--return__p\">Creates a new whale sighting, must send in JSON format</p>\n                </div>\n                <div className=\"api-bottom-seperator__div\"></div>\n              </div>\n              <div className=\"api-block__section__div\">\n                <h4 className=\"api-link__h4\">www.heroku.com <span className=\"api-link__span\">/api/v1/whale_sightings/:id</span></h4>\n                <div className=\"fetch__div\">\n                  <p className=\"fetch--request__p\">DELETE</p>\n                  <p className=\"fetch--request--return__p\">Deletes whale sighting</p>\n                </div>\n              </div>\n            </section>\n          </section>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}